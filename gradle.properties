# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html

# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
org.gradle.jvmargs=-Xmx4096M -XX:MaxPermSize=4096m -Dfile.encoding=UTF-8

# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects.
# For more details, visit:
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
org.gradle.parallel=true

# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app's APK.
# For more information, visit:
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true

# Enables namespacing of each library's R class so that its R class includes only the
# resources declared in the library itself and none from the library's dependencies,
# thereby reducing the size of the R class for that library.
android.nonTransitiveRClass=true

# Automatically convert third-party libraries to use AndroidX.
# When this flag is set to true, the Android plugin automatically migrates existing
# third-party libraries to use AndroidX dependencies by rewriting their binaries.
# The flag is false by default if it is not specified.
android.enableJetifier=true

# A daemon is a computer program that runs as a background process,
# rather than being under the direct control of an interactive user.
org.gradle.daemon=true

# The Configuration injection feature and access to the complete project model are possible
# because every project is configured before the execution phase.
# However, this approach may not be the most efficient in a very large multi-project build.
# Some Gradle builds have a hierarchy of hundreds of subprojects,
# and the configuration time of huge multi-project builds may become noticeable.
# Configuration on demand attempts to configure only projects that are relevant for requested tasks,
# i.e., it only executes the build script file of projects that are participating in the build.
# This way, the configuration time of a large multi-project build can be reduced.
# For more information, visit:
# https://docs.gradle.org/current/userguide/multi_project_configuration_and_execution.html#sec:configuration_on_demand
org.gradle.configureondemand=false

# When set to 'true', Gradle will use the experimental configuration cache feature.
# This may lead to faster build times by caching parts of the configuration.
# However, this feature is experimental and may not work correctly with all projects.
# For more information about the configuration cache, visit:
# https://docs.gradle.org/current/userguide/configuration_cache.html
org.gradle.unsafe.configuration-cache=true

# Key and Alias of the release key
# Replace 'your_release_key_password' with the actual password of your release key.
# Replace 'your_key_alias' with the alias of your release key.
# Replace 'your_store_password' with the password of your keystore file.
RELEASE_KEY_PASSWORD=your_release_key_password
RELEASE_KEY_ALIAS=your_key_alias
RELEASE_STORE_PASSWORD=your_store_password